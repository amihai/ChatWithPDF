Dear Team, 


I would like to take a moment today to announce some important adjustments to the organization within the COO division. 

As we continue to grow and evolve we have seen substantial progress in enhancing collaboration across the eCorp Group. Moreover, we are operating in a fast-paced industry that is constantly advancing with new technologies, such as Artificial Intelligence. To ensure that we have a solid foundation to lead the way with our business, we need to grow even closer together and take advantage of the power of our strong group. Our organizational setup needs to evolve to become a tailored and even more powerful framework that supports our goals. 

The following changes will become effective today, on June 1st, with further transitions to be evaluated, aligned and implemented in the upcoming weeks and months. 


From an operational perspective, we need our markets and brands to unite further to benefit from synergies and increase our effectiveness as a team. Therefore, we will establish the division “Customer Care Europe” led by Charlotte Smith. She has been successfully leading the DE and FR market in the past years. Recently, the eCorp Cloud Support has been moved to Charlotte's organization already. In addition, the EMEA and IT markets will become part of her responsibility now. 


There will be no structural changes for the RO, MD and EU site, but we aim to bring the English-speaking markets closer together operationally. Max Popescu is tasked with developing and implementing an operating model that helps us to improve collaboration and efficiency to ultimately improve the customer experience of both markets. 

Roberto Kenny will continue to lead the RO site for now. However, as he is taking over more global responsibility we will officially search for a new Head of RO Operations locally. Roberto has contributed tremendously to making the RO site successful with the strong leadership team onsite. While Roberto takes on more responsibility globally, the local leadership team will continue and extend the close collaboration with Max and Pauline.


Mihail Frederick has decided to leave the company to take on a new challenge. I have known Mihail for many years and he has largely contributed to making our COO organization what it is today. Thank you, Mihail! I respect your decision and wish you all the best for your personal and professional future. Mihail's last day will be on July 31st. Until then, he will support the organization by ensuring a smooth transition. 

Roberto Kenny will be taking on additional cross-functional responsibilities within our new organizational structure. He will be leading the division “Service Delivery & Improvement”. In addition to the Customer Experience and Customer Research topics, he will take on the responsibility for Operational Performance with the teams Business Intelligence and Business Analytics, Global Command Center and Real-Time Workforce Management.

To ensure focus and expertise in regards to technology advancement, we are establishing the division “Innovation & Integration” led by Sandro Kopte. The team will be responsible to continuously drive our tool development for Customer Care and further the integration of our brands, while improving our efficiency and effectiveness through the use of Artificial Intelligence and Machine Learning. Sandro has been instrumental in piloting new technologies and I am excited to see what he can achieve with this newly created division. Sandro will continue to lead Starts Customer Care with the strong support of his leadership team onsite. 


A key role in ensuring that we meet our budgets and plan accordingly is played by the “Operational Planning & Analysis” department. Gheorghe Vasile will lead the division and report directly to me. By closely monitoring performance metrics, this department enables data-driven decision-making, optimizes costs, and continually seeks ways to improve our financial efficiency.


As you know, the Customer Care Operations areas of Arakis, Emagazin, eCorp Cloud and Starts are part of the eCorp COO organization. Our teamwork has helped us to substantially improve and advance our Customer Service through sharing of expertise and taking advantage of synergies. While we already work closely with the other brands, we aim to strengthen and elevate our collaboration to the next level to move forward together as a strong, united eCorp Group.  

 

The changes will be reflected in InsideNet in the next few days. 


Please find attached the organizational chart of the COO organization, showing all divisions and the departments directly affected by the changes.